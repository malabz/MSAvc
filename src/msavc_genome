#!/bin/bash

set -e

genome_value=""
input_value=
output_value=
gz_mode=
gz_suffix=
force_overwrite=
other_args=()
has_g=

while [[ $# -gt 0 ]]; do
  case "$1" in
    -R)
      genome_value="$2"
      shift 2
      ;;
    -i|--in)
      input_value="$2"
      shift 2
      ;;
    -o|--out)
      output_value="$2"
      shift 2
      ;;
    -C|--compress-bgz)
      gz_mode=1
      gz_suffix=".gz"
      shift
      ;;
    -v|--version)
      msavc_fasta --version
      exit 0
      ;;
    -h|--help)
      echo "$0 -R <genome_name> -i <input_file> -o <output_file>"
      echo "Extra argument: -C compress final file to .gz file"
      echo "Other arguments please see in 'msavc_fasta --help'"
      exit 1
      ;;
    -g|--genotype-matrix)
      has_g=1
      other_args+=("$1")
      shift
      ;;
    -f|--force-overwrite)
      force_overwrite="-f"
      shift
      ;;
    -b|--filter-begin|-e|--filter-end|-s|--sub-block)
      echo "$1 is deprecated in msavc_genome mode, see help for more information"
      exit 1
      ;;
    *)
      other_args+=("$1")
      shift
      ;;
  esac
done

echo "Genome prefix: $genome_value"
echo "Input file: $input_value"
echo "Output file: $output_value$gz_suffix"

if [[ "$input_value" == "" ]]; then
  echo "Error: no input file! Please check your arguments and run again."
  exit 1
fi

if [ -f "$output_value$gz_suffix" ]; then
  if [[ "$force_overwrite" == "" ]]; then
    echo "file $output_value$gz_suffix exists; use --force-overwrite or -f to demand an overwrite"
    exit 1
  fi
fi

if [[ "$genome_value" == "" ]]; then
  echo "Warning: no determined genome name, will find the first genome name"
  genome_value=$(grep -A 1000 "^a " "$input_value" | grep "^s " | head -n 1 | awk '{print $2}' | sed 's/\..*//')
  if [[ -z "$genome_name" ]]; then
      echo "Info: $genome_value is the reference"
  else
      echo "Error: no genome name found. Program will exit."
      exit 1
  fi
fi

if [[ "$output_value" == "" ]]; then
  echo "Error: no output file! Please check your arguments and run again."
  exit 1
fi

# process match sequences
matched_sequences=()

while read -r line; do
  if [[ "$line" == s\ * ]]; then
    seq_name=$(echo "$line" | awk '{print $2}')
    prefix=$(echo "$seq_name" | cut -d'.' -f1)
    if [[ "$prefix" == "$genome_value" ]]; then
      matched_sequences+=("$seq_name")
    fi
  fi
done < "$input_value"

matched_sequences=($(printf "%s\n" "${matched_sequences[@]}" | sort -u))
mkdir -p $output_value-

if [[ ${#matched_sequences[@]} -eq 0 ]]; then
  echo "Not found $genome_value. Please check your arguments and try again."
  exit 1
else
  echo "Found and processing genomes:"
  for name in "${matched_sequences[@]}"; do
    echo "Processing $name..."
    msavc_fasta -r $name -o $output_value-/$name.vcf -i $input_value "${other_args[@]}"
  done
fi

final_vcfs=

for name in "${matched_sequences[@]}"; do
  final_vcfs="$final_vcfs $output_value-/$name.vcf"
done

vcf_merge $final_vcfs > $output_value

if [[ "$gz_mode" == "1" ]]; then
  gzip -N $output_value $force_overwrite
fi

echo "file: $final_file output: $output_value$gz_suffix"

rm -rf $output_value-
